{"ast":null,"code":"\"use strict\";\n\nvar streams = require('../streams'),\n  layouts = require('../layouts'),\n  path = require('path'),\n  os = require('os'),\n  eol = os.EOL || '\\n',\n  openFiles = [];\n\n//close open files on process exit.\nprocess.on('exit', function () {\n  openFiles.forEach(function (file) {\n    file.end();\n  });\n});\n\n/**\n * File appender that rolls files according to a date pattern.\n * @filename base filename.\n * @pattern the format that will be added to the end of filename when rolling,\n *          also used to check when to roll files - defaults to '.yyyy-MM-dd'\n * @layout layout function for log messages - defaults to basicLayout\n * @timezoneOffset optional timezone offset in minutes - defaults to system local\n */\nfunction appender(filename, pattern, alwaysIncludePattern, layout, timezoneOffset) {\n  layout = layout || layouts.basicLayout;\n  var logFile = new streams.DateRollingFileStream(filename, pattern, {\n    alwaysIncludePattern: alwaysIncludePattern\n  });\n  openFiles.push(logFile);\n  return function (logEvent) {\n    logFile.write(layout(logEvent, timezoneOffset) + eol, \"utf8\");\n  };\n}\nfunction configure(config, options) {\n  var layout;\n  if (config.layout) {\n    layout = layouts.layout(config.layout.type, config.layout);\n  }\n  if (!config.alwaysIncludePattern) {\n    config.alwaysIncludePattern = false;\n  }\n  if (options && options.cwd && !config.absolute) {\n    config.filename = path.join(options.cwd, config.filename);\n  }\n  return appender(config.filename, config.pattern, config.alwaysIncludePattern, layout, config.timezoneOffset);\n}\nfunction shutdown(cb) {\n  var completed = 0;\n  var error;\n  var complete = function (err) {\n    error = error || err;\n    completed++;\n    if (completed >= openFiles.length) {\n      cb(error);\n    }\n  };\n  if (!openFiles.length) {\n    return cb();\n  }\n  openFiles.forEach(function (file) {\n    if (!file.write(eol, \"utf-8\")) {\n      file.once('drain', function () {\n        file.end(complete);\n      });\n    } else {\n      file.end(complete);\n    }\n  });\n}\nexports.appender = appender;\nexports.configure = configure;\nexports.shutdown = shutdown;","map":{"version":3,"names":["streams","require","layouts","path","os","eol","EOL","openFiles","process","on","forEach","file","end","appender","filename","pattern","alwaysIncludePattern","layout","timezoneOffset","basicLayout","logFile","DateRollingFileStream","push","logEvent","write","configure","config","options","type","cwd","absolute","join","shutdown","cb","completed","error","complete","err","length","once","exports"],"sources":["C:/Users/malvi/Angular/template/node_modules/sql-to-json/node_modules/log4js/lib/appenders/dateFile.js"],"sourcesContent":["\"use strict\";\nvar streams = require('../streams')\n, layouts = require('../layouts')\n, path = require('path')\n, os = require('os')\n, eol = os.EOL || '\\n'\n, openFiles = [];\n\n//close open files on process exit.\nprocess.on('exit', function() {\n  openFiles.forEach(function (file) {\n    file.end();\n  });\n});\n\n/**\n * File appender that rolls files according to a date pattern.\n * @filename base filename.\n * @pattern the format that will be added to the end of filename when rolling,\n *          also used to check when to roll files - defaults to '.yyyy-MM-dd'\n * @layout layout function for log messages - defaults to basicLayout\n * @timezoneOffset optional timezone offset in minutes - defaults to system local\n */\nfunction appender(filename, pattern, alwaysIncludePattern, layout, timezoneOffset) {\n  layout = layout || layouts.basicLayout;\n\n  var logFile = new streams.DateRollingFileStream(\n    filename,\n    pattern,\n    { alwaysIncludePattern: alwaysIncludePattern }\n  );\n  openFiles.push(logFile);\n\n  return function(logEvent) {\n    logFile.write(layout(logEvent, timezoneOffset) + eol, \"utf8\");\n  };\n\n}\n\nfunction configure(config, options) {\n  var layout;\n\n  if (config.layout) {\n    layout = layouts.layout(config.layout.type, config.layout);\n  }\n\n  if (!config.alwaysIncludePattern) {\n    config.alwaysIncludePattern = false;\n  }\n\n  if (options && options.cwd && !config.absolute) {\n    config.filename = path.join(options.cwd, config.filename);\n  }\n\n  return appender(config.filename, config.pattern, config.alwaysIncludePattern, layout, config.timezoneOffset);\n}\n\nfunction shutdown(cb) {\n  var completed = 0;\n  var error;\n  var complete = function(err) {\n    error = error || err;\n    completed++;\n    if (completed >= openFiles.length) {\n      cb(error);\n    }\n  };\n  if (!openFiles.length) {\n    return cb();\n  }\n  openFiles.forEach(function(file) {\n    if (!file.write(eol, \"utf-8\")) {\n      file.once('drain', function() {\n        file.end(complete);\n      });\n    } else {\n      file.end(complete);\n    }\n  });\n}\n\nexports.appender = appender;\nexports.configure = configure;\nexports.shutdown = shutdown;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}