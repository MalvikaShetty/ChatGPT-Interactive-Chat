{"ast":null,"code":"import { __decorate, __metadata } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { ChatService } from '../../../../shared/services/chat.service';\nimport { FileManagerComponent } from '../../file-manager/file-manager.component';\n//import { Input } from 'hammerjs';\nlet ChatComponent = class ChatComponent {\n  constructor(chatService) {\n    this.chatService = chatService;\n    this.openTab = \"call\";\n    this.users = [];\n    this.searchUsers = [];\n    this.error = false;\n    this.notFound = false;\n    this.showEmojiPicker = false;\n    this.mobileToggle = false;\n  }\n  ngOnInit() {\n    this.chatService.getChats(1);\n    this.chatService.chatHistory;\n    //this.userChat(this.id)\n    //this.getProfile()\n  }\n\n  openCurrentChat() {\n    this.openChat = false;\n  }\n  toggleEmojiPicker() {\n    this.showEmojiPicker = !this.showEmojiPicker;\n  }\n  addEmoji(event) {\n    const text = `${event.emoji.native}`;\n    this.chatText = text;\n    this.showEmojiPicker = false;\n  }\n  tabbed(val) {\n    this.openTab = val;\n  }\n  // Get user Profile\n  getProfile() {\n    this.chatService.getCurrentUser().subscribe(userProfile => this.profile = userProfile);\n  }\n  // User Chat\n  userChat(id) {\n    this.chatService.getMessageByChatId(id);\n    this.openChat = true;\n    // chatToUser(id).subscribe(chatUser => this.chatUser = chatUser)\n    // this.chathis = this.chatService.getChats(id);\n  }\n  // Send Message to User\n  sendMessagee(form) {\n    if (!form.value.message) {\n      this.error = true;\n      return false;\n    }\n    this.error = false;\n    const chat = {\n      chatMessageId: 0,\n      userId: 1,\n      messages: []\n    };\n    console.log(\"Works fine\");\n    //const newArray: number[] = [1, 2, 3];\n    this.myArrayMessages = {\n      messageId: 0,\n      userId: 1,\n      question: form.value.message,\n      answer: \"\"\n    };\n    chat.messages.push(this.myArrayMessages);\n    console.log(\"Still Works fine\");\n    console.log(chat.messages[0].question + \" what if....\");\n    console.log(\"wow Still Works fine\");\n    this.jsonFileData = FileManagerComponent.convertedToJsonString, this.chatService.sendMessage(chat, this.jsonFileData);\n    // this.chatText = ''\n    // this.chatUser.seen = 'online'\n    //this.chatUser.online = true\n  }\n\n  searchTerm(term) {\n    if (!term) return this.searchUsers = this.users;\n    term = term.toLowerCase();\n    let user = [];\n    this.users.filter(users => {\n      if (users.name.toLowerCase().includes(term)) {\n        user.push(users);\n      }\n    });\n    this.searchUsers = user;\n  }\n  mobileMenu() {\n    this.mobileToggle = !this.mobileToggle;\n  }\n};\nChatComponent = __decorate([Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.scss']\n}), __metadata(\"design:paramtypes\", [ChatService])], ChatComponent);\nexport { ChatComponent };","map":{"version":3,"mappings":"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","names":["Component","ChatService","FileManagerComponent","ChatComponent","constructor","chatService","ngOnInit","getChats","chatHistory","openCurrentChat","openChat","toggleEmojiPicker","showEmojiPicker","addEmoji","event","text","emoji","native","chatText","tabbed","val","openTab","getProfile","getCurrentUser","subscribe","userProfile","profile","userChat","id","getMessageByChatId","sendMessagee","form","value","message","error","chat","chatMessageId","userId","messages","console","log","myArrayMessages","messageId","question","answer","push","jsonFileData","convertedToJsonString","sendMessage","searchTerm","term","searchUsers","users","toLowerCase","user","filter","name","includes","mobileMenu","mobileToggle","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\malvi\\Angular\\template\\src\\app\\components\\apps\\chat\\chat\\chat.component.ts"],"sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\nimport { ChatMessages, ChatUsers, Messages } from '../../../../shared/model/chat.models';\nimport { ChatService } from '../../../../shared/services/chat.service';\nimport * as XLSX from 'xlsx';\nimport { FileManagerComponent } from '../../file-manager/file-manager.component';\nimport { Console } from 'console';\nimport { NgForm } from '@angular/forms';\nimport { empty } from 'rxjs';\n//import { Input } from 'hammerjs';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.scss']\n})\nexport class ChatComponent implements OnInit {\n  \n  public openTab : string = \"call\";\n  public users : ChatUsers[] = []\n  public searchUsers : ChatUsers[] = []\n  public chatUser : any;\n  public profile : any;\n  public chat : any;\n  public chatText : string;\n  public error : boolean = false;\n  public notFound: boolean = false;\n  public id : any;\n  public searchText : string;\n  public showEmojiPicker:boolean = false;\n  public emojies: any;\n  public mobileToggle: boolean = false;\n  fileManComponent: FileManagerComponent;\n  public chathis: any;\n  public jsonFileData: any;\n  public openChat : boolean;\n  myArrayMessages: Messages; \n\n  constructor(public chatService: ChatService) {\n  }\n\n  ngOnInit() {  \n    this.chatService.getChats(1);\n    this.chatService.chatHistory;\n    //this.userChat(this.id)\n    //this.getProfile()\n  }\n\n  openCurrentChat() {\n    this.openChat = false;\n  }\n\n  public toggleEmojiPicker(){\n    this.showEmojiPicker=!this.showEmojiPicker;\n  }\n\n  addEmoji(event){\n    const text = `${event.emoji.native}`;\n    this.chatText = text;\n    this.showEmojiPicker = false;\n  }\n\n  public tabbed(val) {\n  \tthis.openTab = val\n  }\n\n  // Get user Profile\n  public getProfile() {\n    this.chatService.getCurrentUser().subscribe(userProfile => this.profile = userProfile)\n  }\n\n  // User Chat\n  public userChat(id:number){    \n    this.chatService.getMessageByChatId(id);\n    this.openChat = true;\n    // chatToUser(id).subscribe(chatUser => this.chatUser = chatUser)\n   // this.chathis = this.chatService.getChats(id);\n  }\n \n  // Send Message to User\n  public sendMessagee(form) { \n    if(!form.value.message){\n      this.error = true\n      return false\n    }\n    this.error = false;\n\n \n\n    const chat : ChatMessages = {\n      chatMessageId:0,\n      userId: 1,\n      messages:[]\n    }\n    console.log(\"Works fine\");\n    //const newArray: number[] = [1, 2, 3];\n    this.myArrayMessages={\n      messageId: 0,\n      userId: 1,\n      question: form.value.message,\n      answer: \"\"\n    }\n\n    chat.messages.push(this.myArrayMessages);\n\n    \n    console.log(\"Still Works fine\");\n    console.log(chat.messages[0].question + \" what if....\");\n    console.log(\"wow Still Works fine\");\n\n\n  \n    this.jsonFileData= FileManagerComponent.convertedToJsonString,\n    this.chatService.sendMessage(chat,this.jsonFileData) \n   // this.chatText = ''\n   // this.chatUser.seen = 'online'\n    //this.chatUser.online = true\n  }\n\n  searchTerm(term: any) {\n    if(!term) return this.searchUsers = this.users\n    term = term.toLowerCase();\n    let user = []\n    this.users.filter(users => {\n      if(users.name.toLowerCase().includes(term)) {\n        user.push(users)\n      } \n    })\n    this.searchUsers = user\n  }\n\n  mobileMenu() {\n    this.mobileToggle = !this.mobileToggle;\n  }\n    \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}