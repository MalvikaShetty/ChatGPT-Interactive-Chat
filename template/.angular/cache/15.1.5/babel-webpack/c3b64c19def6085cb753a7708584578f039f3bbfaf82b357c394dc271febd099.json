{"ast":null,"code":"\"use strict\";\n\nexports.ISO8601_FORMAT = \"yyyy-MM-dd hh:mm:ss.SSS\";\nexports.ISO8601_WITH_TZ_OFFSET_FORMAT = \"yyyy-MM-ddThh:mm:ssO\";\nexports.DATETIME_FORMAT = \"dd MM yyyy hh:mm:ss.SSS\";\nexports.ABSOLUTETIME_FORMAT = \"hh:mm:ss.SSS\";\nfunction padWithZeros(vNumber, width) {\n  var numAsString = vNumber + \"\";\n  while (numAsString.length < width) {\n    numAsString = \"0\" + numAsString;\n  }\n  return numAsString;\n}\nfunction addZero(vNumber) {\n  return padWithZeros(vNumber, 2);\n}\n\n/**\n * Formats the TimeOffest\n * Thanks to http://www.svendtofte.com/code/date_format/\n * @private\n */\nfunction offset(timezoneOffset) {\n  // Difference to Greenwich time (GMT) in hours\n  var os = Math.abs(timezoneOffset);\n  var h = String(Math.floor(os / 60));\n  var m = String(os % 60);\n  if (h.length == 1) {\n    h = \"0\" + h;\n  }\n  if (m.length == 1) {\n    m = \"0\" + m;\n  }\n  return timezoneOffset < 0 ? \"+\" + h + m : \"-\" + h + m;\n}\nexports.asString = function ( /*format,*/date, timezoneOffset) {\n  var format = exports.ISO8601_FORMAT;\n  if (typeof date === \"string\") {\n    format = arguments[0];\n    date = arguments[1];\n    timezoneOffset = arguments[2];\n  }\n  // make the date independent of the system timezone by working with UTC\n  if (timezoneOffset === undefined) {\n    timezoneOffset = date.getTimezoneOffset();\n  }\n  date.setUTCMinutes(date.getUTCMinutes() - timezoneOffset);\n  var vDay = addZero(date.getUTCDate());\n  var vMonth = addZero(date.getUTCMonth() + 1);\n  var vYearLong = addZero(date.getUTCFullYear());\n  var vYearShort = addZero(date.getUTCFullYear().toString().substring(2, 4));\n  var vYear = format.indexOf(\"yyyy\") > -1 ? vYearLong : vYearShort;\n  var vHour = addZero(date.getUTCHours());\n  var vMinute = addZero(date.getUTCMinutes());\n  var vSecond = addZero(date.getUTCSeconds());\n  var vMillisecond = padWithZeros(date.getUTCMilliseconds(), 3);\n  var vTimeZone = offset(timezoneOffset);\n  date.setUTCMinutes(date.getUTCMinutes() + timezoneOffset);\n  var formatted = format.replace(/dd/g, vDay).replace(/MM/g, vMonth).replace(/y{1,4}/g, vYear).replace(/hh/g, vHour).replace(/mm/g, vMinute).replace(/ss/g, vSecond).replace(/SSS/g, vMillisecond).replace(/O/g, vTimeZone);\n  return formatted;\n};","map":{"version":3,"names":["exports","ISO8601_FORMAT","ISO8601_WITH_TZ_OFFSET_FORMAT","DATETIME_FORMAT","ABSOLUTETIME_FORMAT","padWithZeros","vNumber","width","numAsString","length","addZero","offset","timezoneOffset","os","Math","abs","h","String","floor","m","asString","date","format","arguments","undefined","getTimezoneOffset","setUTCMinutes","getUTCMinutes","vDay","getUTCDate","vMonth","getUTCMonth","vYearLong","getUTCFullYear","vYearShort","toString","substring","vYear","indexOf","vHour","getUTCHours","vMinute","vSecond","getUTCSeconds","vMillisecond","getUTCMilliseconds","vTimeZone","formatted","replace"],"sources":["C:/Users/malvi/Angular/template/node_modules/sql-to-json/node_modules/log4js/lib/date_format.js"],"sourcesContent":["\"use strict\";\nexports.ISO8601_FORMAT = \"yyyy-MM-dd hh:mm:ss.SSS\";\nexports.ISO8601_WITH_TZ_OFFSET_FORMAT = \"yyyy-MM-ddThh:mm:ssO\";\nexports.DATETIME_FORMAT = \"dd MM yyyy hh:mm:ss.SSS\";\nexports.ABSOLUTETIME_FORMAT = \"hh:mm:ss.SSS\";\n\nfunction padWithZeros(vNumber, width) {\n  var numAsString = vNumber + \"\";\n  while (numAsString.length < width) {\n    numAsString = \"0\" + numAsString;\n  }\n  return numAsString;\n}\n  \nfunction addZero(vNumber) {\n  return padWithZeros(vNumber, 2);\n}\n\n/**\n * Formats the TimeOffest\n * Thanks to http://www.svendtofte.com/code/date_format/\n * @private\n */\nfunction offset(timezoneOffset) {\n  // Difference to Greenwich time (GMT) in hours\n  var os = Math.abs(timezoneOffset);\n  var h = String(Math.floor(os/60));\n  var m = String(os%60);\n  if (h.length == 1) {\n    h = \"0\" + h;\n  }\n  if (m.length == 1) {\n    m = \"0\" + m;\n  }\n  return timezoneOffset < 0 ? \"+\"+h+m : \"-\"+h+m;\n}\n\nexports.asString = function(/*format,*/ date, timezoneOffset) {\n  var format = exports.ISO8601_FORMAT;\n  if (typeof(date) === \"string\") {\n    format = arguments[0];\n    date = arguments[1];\n    timezoneOffset = arguments[2];\n  }\n  // make the date independent of the system timezone by working with UTC\n  if (timezoneOffset === undefined) {\n    timezoneOffset = date.getTimezoneOffset();\n  }\n  date.setUTCMinutes(date.getUTCMinutes() - timezoneOffset);\n  var vDay = addZero(date.getUTCDate());\n  var vMonth = addZero(date.getUTCMonth()+1);\n  var vYearLong = addZero(date.getUTCFullYear());\n  var vYearShort = addZero(date.getUTCFullYear().toString().substring(2,4));\n  var vYear = (format.indexOf(\"yyyy\") > -1 ? vYearLong : vYearShort);\n  var vHour  = addZero(date.getUTCHours());\n  var vMinute = addZero(date.getUTCMinutes());\n  var vSecond = addZero(date.getUTCSeconds());\n  var vMillisecond = padWithZeros(date.getUTCMilliseconds(), 3);\n  var vTimeZone = offset(timezoneOffset);\n  date.setUTCMinutes(date.getUTCMinutes() + timezoneOffset);\n  var formatted = format\n    .replace(/dd/g, vDay)\n    .replace(/MM/g, vMonth)\n    .replace(/y{1,4}/g, vYear)\n    .replace(/hh/g, vHour)\n    .replace(/mm/g, vMinute)\n    .replace(/ss/g, vSecond)\n    .replace(/SSS/g, vMillisecond)\n    .replace(/O/g, vTimeZone);\n  return formatted;\n\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}