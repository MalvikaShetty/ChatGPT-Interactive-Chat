{"ast":null,"code":"\"use strict\";\n\nvar fs = require('fs'),\n  stream,\n  debug = require('../debug')('BaseRollingFileStream'),\n  util = require('util'),\n  semver = require('semver');\nif (semver.satisfies(process.version, '>=0.10.0')) {\n  stream = require('stream');\n} else {\n  stream = require('readable-stream');\n}\nmodule.exports = BaseRollingFileStream;\nfunction BaseRollingFileStream(filename, options) {\n  debug(\"In BaseRollingFileStream\");\n  this.filename = filename;\n  this.options = options || {};\n  this.options.encoding = this.options.encoding || 'utf8';\n  this.options.mode = this.options.mode || parseInt('0644', 8);\n  this.options.flags = this.options.flags || 'a';\n  this.currentSize = 0;\n  function currentFileSize(file) {\n    var fileSize = 0;\n    try {\n      fileSize = fs.statSync(file).size;\n    } catch (e) {\n      // file does not exist\n    }\n    return fileSize;\n  }\n  function throwErrorIfArgumentsAreNotValid() {\n    if (!filename) {\n      throw new Error(\"You must specify a filename\");\n    }\n  }\n  throwErrorIfArgumentsAreNotValid();\n  debug(\"Calling BaseRollingFileStream.super\");\n  BaseRollingFileStream.super_.call(this);\n  this.openTheStream();\n  this.currentSize = currentFileSize(this.filename);\n}\nutil.inherits(BaseRollingFileStream, stream.Writable);\nBaseRollingFileStream.prototype._write = function (chunk, encoding, callback) {\n  var that = this;\n  function writeTheChunk() {\n    debug(\"writing the chunk to the underlying stream\");\n    that.currentSize += chunk.length;\n    try {\n      that.theStream.write(chunk, encoding, callback);\n    } catch (err) {\n      debug(err);\n      callback();\n    }\n  }\n  debug(\"in _write\");\n  if (this.shouldRoll()) {\n    this.currentSize = 0;\n    this.roll(this.filename, writeTheChunk);\n  } else {\n    writeTheChunk();\n  }\n};\nBaseRollingFileStream.prototype.openTheStream = function (cb) {\n  debug(\"opening the underlying stream\");\n  this.theStream = fs.createWriteStream(this.filename, this.options);\n  if (cb) {\n    this.theStream.on(\"open\", cb);\n  }\n};\nBaseRollingFileStream.prototype.closeTheStream = function (cb) {\n  debug(\"closing the underlying stream\");\n  this.theStream.end(cb);\n};\nBaseRollingFileStream.prototype.shouldRoll = function () {\n  return false; // default behaviour is never to roll\n};\n\nBaseRollingFileStream.prototype.roll = function (filename, callback) {\n  callback(); // default behaviour is not to do anything\n};","map":{"version":3,"names":["fs","require","stream","debug","util","semver","satisfies","process","version","module","exports","BaseRollingFileStream","filename","options","encoding","mode","parseInt","flags","currentSize","currentFileSize","file","fileSize","statSync","size","e","throwErrorIfArgumentsAreNotValid","Error","super_","call","openTheStream","inherits","Writable","prototype","_write","chunk","callback","that","writeTheChunk","length","theStream","write","err","shouldRoll","roll","cb","createWriteStream","on","closeTheStream","end"],"sources":["C:/Users/malvi/Angular/template/node_modules/sql-to-json/node_modules/log4js/lib/streams/BaseRollingFileStream.js"],"sourcesContent":["\"use strict\";\nvar fs = require('fs')\n, stream\n, debug = require('../debug')('BaseRollingFileStream')\n, util = require('util')\n, semver = require('semver');\n\nif (semver.satisfies(process.version, '>=0.10.0')) {\n  stream = require('stream');\n} else {\n  stream = require('readable-stream');\n}\n\nmodule.exports = BaseRollingFileStream;\n\nfunction BaseRollingFileStream(filename, options) {\n  debug(\"In BaseRollingFileStream\");\n  this.filename = filename;\n  this.options = options || {};\n  this.options.encoding = this.options.encoding || 'utf8';\n  this.options.mode = this.options.mode || parseInt('0644', 8);\n  this.options.flags = this.options.flags || 'a';\n\n  this.currentSize = 0;\n  \n  function currentFileSize(file) {\n    var fileSize = 0;\n    try {\n      fileSize = fs.statSync(file).size;\n    } catch (e) {\n      // file does not exist\n    }\n    return fileSize;\n  }\n\n  function throwErrorIfArgumentsAreNotValid() {\n    if (!filename) {\n      throw new Error(\"You must specify a filename\");\n    }\n  }\n\n  throwErrorIfArgumentsAreNotValid();\n  debug(\"Calling BaseRollingFileStream.super\");\n  BaseRollingFileStream.super_.call(this);\n  this.openTheStream();\n  this.currentSize = currentFileSize(this.filename);\n}\nutil.inherits(BaseRollingFileStream, stream.Writable);\n\nBaseRollingFileStream.prototype._write = function(chunk, encoding, callback) {\n  var that = this;\n  function writeTheChunk() {\n    debug(\"writing the chunk to the underlying stream\");\n    that.currentSize += chunk.length;\n    try {\n      that.theStream.write(chunk, encoding, callback);\n    }\n    catch (err){\n      debug(err);\n      callback();\n    }\n  }\n\n  debug(\"in _write\");\n\n  if (this.shouldRoll()) {\n    this.currentSize = 0;\n    this.roll(this.filename, writeTheChunk);\n  } else {\n    writeTheChunk();\n  }\n};\n\nBaseRollingFileStream.prototype.openTheStream = function(cb) {\n  debug(\"opening the underlying stream\");\n  this.theStream = fs.createWriteStream(this.filename, this.options);\n  if (cb) {\n    this.theStream.on(\"open\", cb);\n  }\n};\n\nBaseRollingFileStream.prototype.closeTheStream = function(cb) {\n  debug(\"closing the underlying stream\");\n  this.theStream.end(cb);\n};\n\nBaseRollingFileStream.prototype.shouldRoll = function() {\n  return false; // default behaviour is never to roll\n};\n\nBaseRollingFileStream.prototype.roll = function(filename, callback) {\n  callback(); // default behaviour is not to do anything\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}