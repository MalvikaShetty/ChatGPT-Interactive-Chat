{"ast":null,"code":"\"use strict\";\n\nvar layouts = require('../layouts'),\n  dgram = require('dgram'),\n  util = require('util');\nfunction logstashUDP(config, layout) {\n  var udp = dgram.createSocket('udp4');\n  var type = config.logType ? config.logType : config.category;\n  layout = layout || layouts.dummyLayout;\n  if (!config.fields) {\n    config.fields = {};\n  }\n  return function log(loggingEvent) {\n    /*\n      https://gist.github.com/jordansissel/2996677\n      {\n        \"message\"    => \"hello world\",\n        \"@version\"   => \"1\",\n        \"@timestamp\" => \"2014-04-22T23:03:14.111Z\",\n        \"type\"       => \"stdin\",\n        \"host\"       => \"hello.local\"\n      }\n      @timestamp is the ISO8601 high-precision timestamp for the event.\n      @version is the version number of this json schema\n      Every other field is valid and fine.\n    */\n\n    if (loggingEvent.data.length > 1) {\n      var secondEvData = loggingEvent.data[1];\n      for (var k in secondEvData) {\n        config.fields[k] = secondEvData[k];\n      }\n    }\n    config.fields.level = loggingEvent.level.levelStr;\n    var logObject = {\n      \"@version\": \"1\",\n      \"@timestamp\": new Date(loggingEvent.startTime).toISOString(),\n      \"type\": config.logType ? config.logType : config.category,\n      \"message\": layout(loggingEvent),\n      \"fields\": config.fields\n    };\n    sendLog(udp, config.host, config.port, logObject);\n  };\n}\nfunction sendLog(udp, host, port, logObject) {\n  var buffer = new Buffer(JSON.stringify(logObject));\n  udp.send(buffer, 0, buffer.length, port, host, function (err, bytes) {\n    if (err) {\n      console.error(\"log4js.logstashUDP - %s:%p Error: %s\", host, port, util.inspect(err));\n    }\n  });\n}\nfunction configure(config) {\n  var layout;\n  if (config.layout) {\n    layout = layouts.layout(config.layout.type, config.layout);\n  }\n  return logstashUDP(config, layout);\n}\nexports.appender = logstashUDP;\nexports.configure = configure;","map":{"version":3,"names":["layouts","require","dgram","util","logstashUDP","config","layout","udp","createSocket","type","logType","category","dummyLayout","fields","log","loggingEvent","data","length","secondEvData","k","level","levelStr","logObject","Date","startTime","toISOString","sendLog","host","port","buffer","Buffer","JSON","stringify","send","err","bytes","console","error","inspect","configure","exports","appender"],"sources":["C:/Users/malvi/Angular/template/node_modules/sql-to-json/node_modules/log4js/lib/appenders/logstashUDP.js"],"sourcesContent":["\"use strict\";\nvar layouts = require('../layouts')\n, dgram = require('dgram')\n, util = require('util');\n\nfunction logstashUDP (config, layout) {\n  var udp = dgram.createSocket('udp4');\n  var type = config.logType ? config.logType : config.category;\n  layout = layout || layouts.dummyLayout;\n  if(!config.fields) {\n    config.fields = {};\n  }\n  return function log(loggingEvent) {\n\n    /*\n      https://gist.github.com/jordansissel/2996677\n      {\n        \"message\"    => \"hello world\",\n        \"@version\"   => \"1\",\n        \"@timestamp\" => \"2014-04-22T23:03:14.111Z\",\n        \"type\"       => \"stdin\",\n        \"host\"       => \"hello.local\"\n      }\n      @timestamp is the ISO8601 high-precision timestamp for the event.\n      @version is the version number of this json schema\n      Every other field is valid and fine.\n    */\n\n    if (loggingEvent.data.length > 1) {\n      var secondEvData = loggingEvent.data[1];\n      for (var k in secondEvData) {\n        config.fields[k] = secondEvData[k];\n      }\n    }\n    config.fields.level = loggingEvent.level.levelStr;\n\n    var logObject = {\n      \"@version\" : \"1\",\n      \"@timestamp\" : (new Date(loggingEvent.startTime)).toISOString(),\n      \"type\" : config.logType ? config.logType : config.category,\n      \"message\" : layout(loggingEvent),\n      \"fields\" : config.fields\n    };\n    sendLog(udp, config.host, config.port, logObject);\n  };\n}\n\nfunction sendLog(udp, host, port, logObject) {\n  var buffer = new Buffer(JSON.stringify(logObject));\n  udp.send(buffer, 0, buffer.length, port, host, function(err, bytes) {\n    if(err) {\n      console.error(\n        \"log4js.logstashUDP - %s:%p Error: %s\", host, port, util.inspect(err)\n      );\n    }\n  });\n}\n\nfunction configure(config) {\n  var layout;\n  if (config.layout) {\n    layout = layouts.layout(config.layout.type, config.layout);\n  }\n  return logstashUDP(config, layout);\n}\n\nexports.appender = logstashUDP;\nexports.configure = configure;\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,OAAO,GAAGC,OAAO,CAAC,YAAY,CAAC;EACjCC,KAAK,GAAGD,OAAO,CAAC,OAAO,CAAC;EACxBE,IAAI,GAAGF,OAAO,CAAC,MAAM,CAAC;AAExB,SAASG,WAAW,CAAEC,MAAM,EAAEC,MAAM,EAAE;EACpC,IAAIC,GAAG,GAAGL,KAAK,CAACM,YAAY,CAAC,MAAM,CAAC;EACpC,IAAIC,IAAI,GAAGJ,MAAM,CAACK,OAAO,GAAGL,MAAM,CAACK,OAAO,GAAGL,MAAM,CAACM,QAAQ;EAC5DL,MAAM,GAAGA,MAAM,IAAIN,OAAO,CAACY,WAAW;EACtC,IAAG,CAACP,MAAM,CAACQ,MAAM,EAAE;IACjBR,MAAM,CAACQ,MAAM,GAAG,CAAC,CAAC;EACpB;EACA,OAAO,SAASC,GAAG,CAACC,YAAY,EAAE;IAEhC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEI,IAAIA,YAAY,CAACC,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;MAChC,IAAIC,YAAY,GAAGH,YAAY,CAACC,IAAI,CAAC,CAAC,CAAC;MACvC,KAAK,IAAIG,CAAC,IAAID,YAAY,EAAE;QAC1Bb,MAAM,CAACQ,MAAM,CAACM,CAAC,CAAC,GAAGD,YAAY,CAACC,CAAC,CAAC;MACpC;IACF;IACAd,MAAM,CAACQ,MAAM,CAACO,KAAK,GAAGL,YAAY,CAACK,KAAK,CAACC,QAAQ;IAEjD,IAAIC,SAAS,GAAG;MACd,UAAU,EAAG,GAAG;MAChB,YAAY,EAAI,IAAIC,IAAI,CAACR,YAAY,CAACS,SAAS,CAAC,CAAEC,WAAW,EAAE;MAC/D,MAAM,EAAGpB,MAAM,CAACK,OAAO,GAAGL,MAAM,CAACK,OAAO,GAAGL,MAAM,CAACM,QAAQ;MAC1D,SAAS,EAAGL,MAAM,CAACS,YAAY,CAAC;MAChC,QAAQ,EAAGV,MAAM,CAACQ;IACpB,CAAC;IACDa,OAAO,CAACnB,GAAG,EAAEF,MAAM,CAACsB,IAAI,EAAEtB,MAAM,CAACuB,IAAI,EAAEN,SAAS,CAAC;EACnD,CAAC;AACH;AAEA,SAASI,OAAO,CAACnB,GAAG,EAAEoB,IAAI,EAAEC,IAAI,EAAEN,SAAS,EAAE;EAC3C,IAAIO,MAAM,GAAG,IAAIC,MAAM,CAACC,IAAI,CAACC,SAAS,CAACV,SAAS,CAAC,CAAC;EAClDf,GAAG,CAAC0B,IAAI,CAACJ,MAAM,EAAE,CAAC,EAAEA,MAAM,CAACZ,MAAM,EAAEW,IAAI,EAAED,IAAI,EAAE,UAASO,GAAG,EAAEC,KAAK,EAAE;IAClE,IAAGD,GAAG,EAAE;MACNE,OAAO,CAACC,KAAK,CACX,sCAAsC,EAAEV,IAAI,EAAEC,IAAI,EAAEzB,IAAI,CAACmC,OAAO,CAACJ,GAAG,CAAC,CACtE;IACH;EACF,CAAC,CAAC;AACJ;AAEA,SAASK,SAAS,CAAClC,MAAM,EAAE;EACzB,IAAIC,MAAM;EACV,IAAID,MAAM,CAACC,MAAM,EAAE;IACjBA,MAAM,GAAGN,OAAO,CAACM,MAAM,CAACD,MAAM,CAACC,MAAM,CAACG,IAAI,EAAEJ,MAAM,CAACC,MAAM,CAAC;EAC5D;EACA,OAAOF,WAAW,CAACC,MAAM,EAAEC,MAAM,CAAC;AACpC;AAEAkC,OAAO,CAACC,QAAQ,GAAGrC,WAAW;AAC9BoC,OAAO,CAACD,SAAS,GAAGA,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}