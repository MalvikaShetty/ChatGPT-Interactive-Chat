{"ast":null,"code":"\"use strict\";\n\nfunction Level(level, levelStr) {\n  this.level = level;\n  this.levelStr = levelStr;\n}\n\n/**\n * converts given String to corresponding Level\n * @param {String} sArg String value of Level OR Log4js.Level\n * @param {Log4js.Level} defaultLevel default Level, if no String representation\n * @return Level object\n * @type Log4js.Level\n */\nfunction toLevel(sArg, defaultLevel) {\n  if (!sArg) {\n    return defaultLevel;\n  }\n  if (typeof sArg === \"string\") {\n    return module.exports[sArg.toUpperCase()] || defaultLevel;\n  }\n  return toLevel(sArg.toString());\n}\nLevel.prototype.toString = function () {\n  return this.levelStr;\n};\nLevel.prototype.isLessThanOrEqualTo = function (otherLevel) {\n  if (typeof otherLevel === \"string\") {\n    otherLevel = toLevel(otherLevel);\n  }\n  return this.level <= otherLevel.level;\n};\nLevel.prototype.isGreaterThanOrEqualTo = function (otherLevel) {\n  if (typeof otherLevel === \"string\") {\n    otherLevel = toLevel(otherLevel);\n  }\n  return this.level >= otherLevel.level;\n};\nLevel.prototype.isEqualTo = function (otherLevel) {\n  if (typeof otherLevel == \"string\") {\n    otherLevel = toLevel(otherLevel);\n  }\n  return this.level === otherLevel.level;\n};\nmodule.exports = {\n  ALL: new Level(Number.MIN_VALUE, \"ALL\"),\n  TRACE: new Level(5000, \"TRACE\"),\n  DEBUG: new Level(10000, \"DEBUG\"),\n  INFO: new Level(20000, \"INFO\"),\n  WARN: new Level(30000, \"WARN\"),\n  ERROR: new Level(40000, \"ERROR\"),\n  FATAL: new Level(50000, \"FATAL\"),\n  MARK: new Level(9007199254740992, \"MARK\"),\n  // 2^53\n  OFF: new Level(Number.MAX_VALUE, \"OFF\"),\n  toLevel: toLevel\n};","map":{"version":3,"names":["Level","level","levelStr","toLevel","sArg","defaultLevel","module","exports","toUpperCase","toString","prototype","isLessThanOrEqualTo","otherLevel","isGreaterThanOrEqualTo","isEqualTo","ALL","Number","MIN_VALUE","TRACE","DEBUG","INFO","WARN","ERROR","FATAL","MARK","OFF","MAX_VALUE"],"sources":["C:/Users/malvi/Angular/template/node_modules/sql-to-json/node_modules/log4js/lib/levels.js"],"sourcesContent":["\"use strict\";\n\nfunction Level(level, levelStr) {\n  this.level = level;\n  this.levelStr = levelStr;\n}\n\n/**\n * converts given String to corresponding Level\n * @param {String} sArg String value of Level OR Log4js.Level\n * @param {Log4js.Level} defaultLevel default Level, if no String representation\n * @return Level object\n * @type Log4js.Level\n */\nfunction toLevel(sArg, defaultLevel) {\n  if (!sArg) {\n    return defaultLevel;\n  }\n  if (typeof sArg === \"string\") {\n    return module.exports[sArg.toUpperCase()] || defaultLevel;\n  }\n  return toLevel(sArg.toString());\n}\n\nLevel.prototype.toString = function() {\n  return this.levelStr;\n};\n\nLevel.prototype.isLessThanOrEqualTo = function(otherLevel) {\n  if (typeof otherLevel === \"string\") {\n    otherLevel = toLevel(otherLevel);\n  }\n  return this.level <= otherLevel.level;\n};\n\nLevel.prototype.isGreaterThanOrEqualTo = function(otherLevel) {\n  if (typeof otherLevel === \"string\") {\n    otherLevel = toLevel(otherLevel);\n  }\n  return this.level >= otherLevel.level;\n};\n\nLevel.prototype.isEqualTo = function(otherLevel) {\n  if (typeof otherLevel == \"string\") {\n    otherLevel = toLevel(otherLevel);\n  }\n  return this.level === otherLevel.level;\n};\n\nmodule.exports = {\n  ALL: new Level(Number.MIN_VALUE, \"ALL\"),\n  TRACE: new Level(5000, \"TRACE\"),\n  DEBUG: new Level(10000, \"DEBUG\"),\n  INFO: new Level(20000, \"INFO\"),\n  WARN: new Level(30000, \"WARN\"),\n  ERROR: new Level(40000, \"ERROR\"),\n  FATAL: new Level(50000, \"FATAL\"),\n  MARK: new Level(9007199254740992, \"MARK\"), // 2^53\n  OFF: new Level(Number.MAX_VALUE, \"OFF\"),\n  toLevel: toLevel\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,SAASA,KAAK,CAACC,KAAK,EAAEC,QAAQ,EAAE;EAC9B,IAAI,CAACD,KAAK,GAAGA,KAAK;EAClB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,OAAO,CAACC,IAAI,EAAEC,YAAY,EAAE;EACnC,IAAI,CAACD,IAAI,EAAE;IACT,OAAOC,YAAY;EACrB;EACA,IAAI,OAAOD,IAAI,KAAK,QAAQ,EAAE;IAC5B,OAAOE,MAAM,CAACC,OAAO,CAACH,IAAI,CAACI,WAAW,EAAE,CAAC,IAAIH,YAAY;EAC3D;EACA,OAAOF,OAAO,CAACC,IAAI,CAACK,QAAQ,EAAE,CAAC;AACjC;AAEAT,KAAK,CAACU,SAAS,CAACD,QAAQ,GAAG,YAAW;EACpC,OAAO,IAAI,CAACP,QAAQ;AACtB,CAAC;AAEDF,KAAK,CAACU,SAAS,CAACC,mBAAmB,GAAG,UAASC,UAAU,EAAE;EACzD,IAAI,OAAOA,UAAU,KAAK,QAAQ,EAAE;IAClCA,UAAU,GAAGT,OAAO,CAACS,UAAU,CAAC;EAClC;EACA,OAAO,IAAI,CAACX,KAAK,IAAIW,UAAU,CAACX,KAAK;AACvC,CAAC;AAEDD,KAAK,CAACU,SAAS,CAACG,sBAAsB,GAAG,UAASD,UAAU,EAAE;EAC5D,IAAI,OAAOA,UAAU,KAAK,QAAQ,EAAE;IAClCA,UAAU,GAAGT,OAAO,CAACS,UAAU,CAAC;EAClC;EACA,OAAO,IAAI,CAACX,KAAK,IAAIW,UAAU,CAACX,KAAK;AACvC,CAAC;AAEDD,KAAK,CAACU,SAAS,CAACI,SAAS,GAAG,UAASF,UAAU,EAAE;EAC/C,IAAI,OAAOA,UAAU,IAAI,QAAQ,EAAE;IACjCA,UAAU,GAAGT,OAAO,CAACS,UAAU,CAAC;EAClC;EACA,OAAO,IAAI,CAACX,KAAK,KAAKW,UAAU,CAACX,KAAK;AACxC,CAAC;AAEDK,MAAM,CAACC,OAAO,GAAG;EACfQ,GAAG,EAAE,IAAIf,KAAK,CAACgB,MAAM,CAACC,SAAS,EAAE,KAAK,CAAC;EACvCC,KAAK,EAAE,IAAIlB,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC;EAC/BmB,KAAK,EAAE,IAAInB,KAAK,CAAC,KAAK,EAAE,OAAO,CAAC;EAChCoB,IAAI,EAAE,IAAIpB,KAAK,CAAC,KAAK,EAAE,MAAM,CAAC;EAC9BqB,IAAI,EAAE,IAAIrB,KAAK,CAAC,KAAK,EAAE,MAAM,CAAC;EAC9BsB,KAAK,EAAE,IAAItB,KAAK,CAAC,KAAK,EAAE,OAAO,CAAC;EAChCuB,KAAK,EAAE,IAAIvB,KAAK,CAAC,KAAK,EAAE,OAAO,CAAC;EAChCwB,IAAI,EAAE,IAAIxB,KAAK,CAAC,gBAAgB,EAAE,MAAM,CAAC;EAAE;EAC3CyB,GAAG,EAAE,IAAIzB,KAAK,CAACgB,MAAM,CAACU,SAAS,EAAE,KAAK,CAAC;EACvCvB,OAAO,EAAEA;AACX,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}