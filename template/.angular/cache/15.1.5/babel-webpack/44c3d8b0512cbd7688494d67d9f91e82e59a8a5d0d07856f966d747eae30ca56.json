{"ast":null,"code":"\"use strict\";\n\n/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview log4js is a library to log in JavaScript in similar manner\n * than in log4j for Java. The API should be nearly the same.\n *\n * <h3>Example:</h3>\n * <pre>\n *  var logging = require('log4js');\n *  //add an appender that logs all messages to stdout.\n *  logging.addAppender(logging.consoleAppender());\n *  //add an appender that logs \"some-category\" to a file\n *  logging.addAppender(logging.fileAppender(\"file.log\"), \"some-category\");\n *  //get a logger\n *  var log = logging.getLogger(\"some-category\");\n *  log.setLevel(logging.levels.TRACE); //set the Level\n *\n *  ...\n *\n *  //call the log\n *  log.trace(\"trace me\" );\n * </pre>\n *\n * NOTE: the authors below are the original browser-based log4js authors\n * don't try to contact them about bugs in this version :)\n * @version 1.0\n * @author Stephan Strittmatter - http://jroller.com/page/stritti\n * @author Seth Chisamore - http://www.chisamore.com\n * @since 2005-05-20\n * @static\n * Website: http://log4js.berlios.de\n */\nvar events = require('events'),\n  fs = require('fs'),\n  path = require('path'),\n  util = require('util'),\n  layouts = require('./layouts'),\n  levels = require('./levels'),\n  loggerModule = require('./logger'),\n  LoggingEvent = loggerModule.LoggingEvent,\n  Logger = loggerModule.Logger,\n  ALL_CATEGORIES = '[all]',\n  appenders = {},\n  loggers = {},\n  appenderMakers = {},\n  appenderShutdowns = {},\n  defaultConfig = {\n    appenders: [{\n      type: \"console\"\n    }],\n    replaceConsole: false\n  };\nrequire('./appenders/console');\nfunction hasLogger(logger) {\n  return loggers.hasOwnProperty(logger);\n}\nfunction getBufferedLogger(categoryName) {\n  var base_logger = getLogger(categoryName);\n  var logger = {};\n  logger.temp = [];\n  logger.target = base_logger;\n  logger.flush = function () {\n    for (var i = 0; i < logger.temp.length; i++) {\n      var log = logger.temp[i];\n      logger.target[log.level](log.message);\n      delete logger.temp[i];\n    }\n  };\n  logger.trace = function (message) {\n    logger.temp.push({\n      level: 'trace',\n      message: message\n    });\n  };\n  logger.debug = function (message) {\n    logger.temp.push({\n      level: 'debug',\n      message: message\n    });\n  };\n  logger.info = function (message) {\n    logger.temp.push({\n      level: 'info',\n      message: message\n    });\n  };\n  logger.warn = function (message) {\n    logger.temp.push({\n      level: 'warn',\n      message: message\n    });\n  };\n  logger.error = function (message) {\n    logger.temp.push({\n      level: 'error',\n      message: message\n    });\n  };\n  logger.fatal = function (message) {\n    logger.temp.push({\n      level: 'fatal',\n      message: message\n    });\n  };\n  return logger;\n}\nfunction normalizeCategory(category) {\n  return category + '.';\n}\nfunction doesLevelEntryContainsLogger(levelCategory, loggerCategory) {\n  var normalizedLevelCategory = normalizeCategory(levelCategory);\n  var normalizedLoggerCategory = normalizeCategory(loggerCategory);\n  return normalizedLoggerCategory.substring(0, normalizedLevelCategory.length) == normalizedLevelCategory;\n}\nfunction doesAppenderContainsLogger(appenderCategory, loggerCategory) {\n  var normalizedAppenderCategory = normalizeCategory(appenderCategory);\n  var normalizedLoggerCategory = normalizeCategory(loggerCategory);\n  return normalizedLoggerCategory.substring(0, normalizedAppenderCategory.length) == normalizedAppenderCategory;\n}\n\n/**\n * Get a logger instance. Instance is cached on categoryName level.\n * @param  {String} categoryName name of category to log to.\n * @return {Logger} instance of logger for the category\n * @static\n */\nfunction getLogger(loggerCategoryName) {\n  // Use default logger if categoryName is not specified or invalid\n  if (typeof loggerCategoryName !== \"string\") {\n    loggerCategoryName = Logger.DEFAULT_CATEGORY;\n  }\n  if (!hasLogger(loggerCategoryName)) {\n    var level = undefined;\n\n    // If there's a \"levels\" entry in the configuration\n    if (levels.config) {\n      // Goes through the categories in the levels configuration entry, starting by the \"higher\" ones.\n      var keys = Object.keys(levels.config).sort();\n      for (var idx = 0; idx < keys.length; idx++) {\n        var levelCategory = keys[idx];\n        if (doesLevelEntryContainsLogger(levelCategory, loggerCategoryName)) {\n          // level for the logger\n          level = levels.config[levelCategory];\n        }\n      }\n    }\n\n    // Create the logger for this name if it doesn't already exist\n    loggers[loggerCategoryName] = new Logger(loggerCategoryName, level);\n    var appenderList;\n    for (var appenderCategory in appenders) {\n      if (doesAppenderContainsLogger(appenderCategory, loggerCategoryName)) {\n        appenderList = appenders[appenderCategory];\n        appenderList.forEach(function (appender) {\n          loggers[loggerCategoryName].addListener(\"log\", appender);\n        });\n      }\n    }\n    if (appenders[ALL_CATEGORIES]) {\n      appenderList = appenders[ALL_CATEGORIES];\n      appenderList.forEach(function (appender) {\n        loggers[loggerCategoryName].addListener(\"log\", appender);\n      });\n    }\n  }\n  return loggers[loggerCategoryName];\n}\n\n/**\n * args are appender, then zero or more categories\n */\nfunction addAppender() {\n  var args = Array.prototype.slice.call(arguments);\n  var appender = args.shift();\n  if (args.length === 0 || args[0] === undefined) {\n    args = [ALL_CATEGORIES];\n  }\n  //argument may already be an array\n  if (Array.isArray(args[0])) {\n    args = args[0];\n  }\n  args.forEach(function (appenderCategory) {\n    addAppenderToCategory(appender, appenderCategory);\n    if (appenderCategory === ALL_CATEGORIES) {\n      addAppenderToAllLoggers(appender);\n    } else {\n      for (var loggerCategory in loggers) {\n        if (doesAppenderContainsLogger(appenderCategory, loggerCategory)) {\n          loggers[loggerCategory].addListener(\"log\", appender);\n        }\n      }\n    }\n  });\n}\nfunction addAppenderToAllLoggers(appender) {\n  for (var logger in loggers) {\n    if (hasLogger(logger)) {\n      loggers[logger].addListener(\"log\", appender);\n    }\n  }\n}\nfunction addAppenderToCategory(appender, category) {\n  if (!appenders[category]) {\n    appenders[category] = [];\n  }\n  appenders[category].push(appender);\n}\nfunction clearAppenders() {\n  appenders = {};\n  for (var logger in loggers) {\n    if (hasLogger(logger)) {\n      loggers[logger].removeAllListeners(\"log\");\n    }\n  }\n}\nfunction configureAppenders(appenderList, options) {\n  clearAppenders();\n  if (appenderList) {\n    appenderList.forEach(function (appenderConfig) {\n      loadAppender(appenderConfig.type);\n      var appender;\n      appenderConfig.makers = appenderMakers;\n      try {\n        appender = appenderMakers[appenderConfig.type](appenderConfig, options);\n        addAppender(appender, appenderConfig.category);\n      } catch (e) {\n        throw new Error(\"log4js configuration problem for \" + util.inspect(appenderConfig), e);\n      }\n    });\n  }\n}\nfunction configureLevels(_levels) {\n  levels.config = _levels; // Keep it so we can create loggers later using this cfg\n  if (_levels) {\n    var keys = Object.keys(levels.config).sort();\n    for (var idx in keys) {\n      var category = keys[idx];\n      if (category === ALL_CATEGORIES) {\n        setGlobalLogLevel(_levels[category]);\n      }\n      for (var loggerCategory in loggers) {\n        if (doesLevelEntryContainsLogger(category, loggerCategory)) {\n          loggers[loggerCategory].setLevel(_levels[category]);\n        }\n      }\n    }\n  }\n}\nfunction setGlobalLogLevel(level) {\n  Logger.prototype.level = levels.toLevel(level, levels.TRACE);\n}\n\n/**\n * Get the default logger instance.\n * @return {Logger} instance of default logger\n * @static\n */\nfunction getDefaultLogger() {\n  return getLogger(Logger.DEFAULT_CATEGORY);\n}\nvar configState = {};\nfunction loadConfigurationFile(filename) {\n  if (filename) {\n    return JSON.parse(fs.readFileSync(filename, \"utf8\"));\n  }\n  return undefined;\n}\nfunction configureOnceOff(config, options) {\n  if (config) {\n    try {\n      configureLevels(config.levels);\n      configureAppenders(config.appenders, options);\n      if (config.replaceConsole) {\n        replaceConsole();\n      } else {\n        restoreConsole();\n      }\n    } catch (e) {\n      throw new Error(\"Problem reading log4js config \" + util.inspect(config) + \". Error was \\\"\" + e.message + \"\\\" (\" + e.stack + \")\");\n    }\n  }\n}\nfunction reloadConfiguration(options) {\n  var mtime = getMTime(configState.filename);\n  if (!mtime) return;\n  if (configState.lastMTime && mtime.getTime() > configState.lastMTime.getTime()) {\n    configureOnceOff(loadConfigurationFile(configState.filename), options);\n  }\n  configState.lastMTime = mtime;\n}\nfunction getMTime(filename) {\n  var mtime;\n  try {\n    mtime = fs.statSync(configState.filename).mtime;\n  } catch (e) {\n    getLogger('log4js').warn('Failed to load configuration file ' + filename);\n  }\n  return mtime;\n}\nfunction initReloadConfiguration(filename, options) {\n  if (configState.timerId) {\n    clearInterval(configState.timerId);\n    delete configState.timerId;\n  }\n  configState.filename = filename;\n  configState.lastMTime = getMTime(filename);\n  configState.timerId = setInterval(reloadConfiguration, options.reloadSecs * 1000, options);\n}\nfunction configure(configurationFileOrObject, options) {\n  var config = configurationFileOrObject;\n  config = config || process.env.LOG4JS_CONFIG;\n  options = options || {};\n  if (config === undefined || config === null || typeof config === 'string') {\n    if (options.reloadSecs) {\n      initReloadConfiguration(config, options);\n    }\n    config = loadConfigurationFile(config) || defaultConfig;\n  } else {\n    if (options.reloadSecs) {\n      getLogger('log4js').warn('Ignoring configuration reload parameter for \"object\" configuration.');\n    }\n  }\n  configureOnceOff(config, options);\n}\nvar originalConsoleFunctions = {\n  log: console.log,\n  debug: console.debug,\n  info: console.info,\n  warn: console.warn,\n  error: console.error\n};\nfunction replaceConsole(logger) {\n  function replaceWith(fn) {\n    return function () {\n      fn.apply(logger, arguments);\n    };\n  }\n  logger = logger || getLogger(\"console\");\n  ['log', 'debug', 'info', 'warn', 'error'].forEach(function (item) {\n    console[item] = replaceWith(item === 'log' ? logger.info : logger[item]);\n  });\n}\nfunction restoreConsole() {\n  ['log', 'debug', 'info', 'warn', 'error'].forEach(function (item) {\n    console[item] = originalConsoleFunctions[item];\n  });\n}\n\n/**\n * Load an appenderModule based on the provided appender filepath. Will first\n * check if the appender path is a subpath of the log4js \"lib/appenders\" directory.\n * If not, it will attempt to load the the appender as complete path.\n *\n * @param {string} appender The filepath for the appender.\n * @returns {Object|null} The required appender or null if appender could not be loaded.\n * @private\n */\nfunction requireAppender(appender) {\n  var appenderModule;\n  try {\n    appenderModule = require('./appenders/' + appender);\n  } catch (e) {\n    appenderModule = require(appender);\n  }\n  return appenderModule;\n}\n\n/**\n * Load an appender. Provided the appender path to be loaded. If appenderModule is defined,\n * it will be used in place of requiring the appender module.\n *\n * @param {string} appender The path to the appender module.\n * @param {Object|void} [appenderModule] The pre-required appender module. When provided,\n * instead of requiring the appender by its path, this object will be used.\n * @returns {void}\n * @private\n */\nfunction loadAppender(appender, appenderModule) {\n  appenderModule = appenderModule || requireAppender(appender);\n  if (!appenderModule) {\n    throw new Error(\"Invalid log4js appender: \" + util.inspect(appender));\n  }\n  module.exports.appenders[appender] = appenderModule.appender.bind(appenderModule);\n  if (appenderModule.shutdown) {\n    appenderShutdowns[appender] = appenderModule.shutdown.bind(appenderModule);\n  }\n  appenderMakers[appender] = appenderModule.configure.bind(appenderModule);\n}\n\n/**\n * Shutdown all log appenders. This will first disable all writing to appenders\n * and then call the shutdown function each appender.\n *\n * @params {Function} cb - The callback to be invoked once all appenders have\n *  shutdown. If an error occurs, the callback will be given the error object\n *  as the first argument.\n * @returns {void}\n */\nfunction shutdown(cb) {\n  // First, disable all writing to appenders. This prevents appenders from\n  // not being able to be drained because of run-away log writes.\n  loggerModule.disableAllLogWrites();\n\n  // Call each of the shutdown functions in parallel\n  var completed = 0;\n  var error;\n  var shutdownFcts = [];\n  var complete = function (err) {\n    error = error || err;\n    completed++;\n    if (completed >= shutdownFcts.length) {\n      cb(error);\n    }\n  };\n  for (var category in appenderShutdowns) {\n    if (appenderShutdowns.hasOwnProperty(category)) {\n      shutdownFcts.push(appenderShutdowns[category]);\n    }\n  }\n  if (!shutdownFcts.length) {\n    return cb();\n  }\n  shutdownFcts.forEach(function (shutdownFct) {\n    shutdownFct(complete);\n  });\n}\nmodule.exports = {\n  getBufferedLogger: getBufferedLogger,\n  getLogger: getLogger,\n  getDefaultLogger: getDefaultLogger,\n  hasLogger: hasLogger,\n  addAppender: addAppender,\n  loadAppender: loadAppender,\n  clearAppenders: clearAppenders,\n  configure: configure,\n  shutdown: shutdown,\n  replaceConsole: replaceConsole,\n  restoreConsole: restoreConsole,\n  levels: levels,\n  setGlobalLogLevel: setGlobalLogLevel,\n  layouts: layouts,\n  appenders: {},\n  appenderMakers: appenderMakers,\n  connectLogger: require('./connect-logger').connectLogger\n};\n\n//set ourselves up\nconfigure();","map":{"version":3,"names":["events","require","fs","path","util","layouts","levels","loggerModule","LoggingEvent","Logger","ALL_CATEGORIES","appenders","loggers","appenderMakers","appenderShutdowns","defaultConfig","type","replaceConsole","hasLogger","logger","hasOwnProperty","getBufferedLogger","categoryName","base_logger","getLogger","temp","target","flush","i","length","log","level","message","trace","push","debug","info","warn","error","fatal","normalizeCategory","category","doesLevelEntryContainsLogger","levelCategory","loggerCategory","normalizedLevelCategory","normalizedLoggerCategory","substring","doesAppenderContainsLogger","appenderCategory","normalizedAppenderCategory","loggerCategoryName","DEFAULT_CATEGORY","undefined","config","keys","Object","sort","idx","appenderList","forEach","appender","addListener","addAppender","args","Array","prototype","slice","call","arguments","shift","isArray","addAppenderToCategory","addAppenderToAllLoggers","clearAppenders","removeAllListeners","configureAppenders","options","appenderConfig","loadAppender","makers","e","Error","inspect","configureLevels","_levels","setGlobalLogLevel","setLevel","toLevel","TRACE","getDefaultLogger","configState","loadConfigurationFile","filename","JSON","parse","readFileSync","configureOnceOff","restoreConsole","stack","reloadConfiguration","mtime","getMTime","lastMTime","getTime","statSync","initReloadConfiguration","timerId","clearInterval","setInterval","reloadSecs","configure","configurationFileOrObject","process","env","LOG4JS_CONFIG","originalConsoleFunctions","console","replaceWith","fn","apply","item","requireAppender","appenderModule","module","exports","bind","shutdown","cb","disableAllLogWrites","completed","shutdownFcts","complete","err","shutdownFct","connectLogger"],"sources":["C:/Users/malvi/Angular/template/node_modules/sql-to-json/node_modules/log4js/lib/log4js.js"],"sourcesContent":["\"use strict\";\n/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview log4js is a library to log in JavaScript in similar manner\n * than in log4j for Java. The API should be nearly the same.\n *\n * <h3>Example:</h3>\n * <pre>\n *  var logging = require('log4js');\n *  //add an appender that logs all messages to stdout.\n *  logging.addAppender(logging.consoleAppender());\n *  //add an appender that logs \"some-category\" to a file\n *  logging.addAppender(logging.fileAppender(\"file.log\"), \"some-category\");\n *  //get a logger\n *  var log = logging.getLogger(\"some-category\");\n *  log.setLevel(logging.levels.TRACE); //set the Level\n *\n *  ...\n *\n *  //call the log\n *  log.trace(\"trace me\" );\n * </pre>\n *\n * NOTE: the authors below are the original browser-based log4js authors\n * don't try to contact them about bugs in this version :)\n * @version 1.0\n * @author Stephan Strittmatter - http://jroller.com/page/stritti\n * @author Seth Chisamore - http://www.chisamore.com\n * @since 2005-05-20\n * @static\n * Website: http://log4js.berlios.de\n */\nvar events = require('events')\n, fs = require('fs')\n, path = require('path')\n, util = require('util')\n, layouts = require('./layouts')\n, levels = require('./levels')\n, loggerModule = require('./logger')\n, LoggingEvent = loggerModule.LoggingEvent\n, Logger = loggerModule.Logger\n, ALL_CATEGORIES = '[all]'\n, appenders = {}\n, loggers = {}\n, appenderMakers = {}\n, appenderShutdowns = {}\n, defaultConfig =   {\n  appenders: [\n    { type: \"console\" }\n  ],\n  replaceConsole: false\n};\n\nrequire('./appenders/console');\n\nfunction hasLogger(logger) {\n  return loggers.hasOwnProperty(logger);\n}\n\n\nfunction getBufferedLogger(categoryName) {\n    var base_logger = getLogger(categoryName);\n    var logger = {};\n    logger.temp = [];\n    logger.target = base_logger;\n    logger.flush = function () {\n        for (var i = 0; i < logger.temp.length; i++) {\n            var log = logger.temp[i];\n            logger.target[log.level](log.message);\n            delete logger.temp[i];\n        }\n    };\n    logger.trace = function (message) { logger.temp.push({level: 'trace', message: message}); };\n    logger.debug = function (message) { logger.temp.push({level: 'debug', message: message}); };\n    logger.info = function (message) { logger.temp.push({level: 'info', message: message}); };\n    logger.warn = function (message) { logger.temp.push({level: 'warn', message: message}); };\n    logger.error = function (message) { logger.temp.push({level: 'error', message: message}); };\n    logger.fatal = function (message) { logger.temp.push({level: 'fatal', message: message}); };\n\n    return logger;\n}\n\nfunction normalizeCategory (category) {\n  return  category + '.';\n}\n\nfunction doesLevelEntryContainsLogger (levelCategory, loggerCategory) {  \n  var normalizedLevelCategory = normalizeCategory(levelCategory);\n  var normalizedLoggerCategory = normalizeCategory(loggerCategory);\n  return normalizedLoggerCategory.substring(0, normalizedLevelCategory.length) == normalizedLevelCategory;\n}\n\nfunction doesAppenderContainsLogger (appenderCategory, loggerCategory) {\n  var normalizedAppenderCategory = normalizeCategory(appenderCategory);\n  var normalizedLoggerCategory = normalizeCategory(loggerCategory);\n  return normalizedLoggerCategory.substring(0, normalizedAppenderCategory.length) == normalizedAppenderCategory;\n}\n\n\n/**\n * Get a logger instance. Instance is cached on categoryName level.\n * @param  {String} categoryName name of category to log to.\n * @return {Logger} instance of logger for the category\n * @static\n */\nfunction getLogger (loggerCategoryName) {\n\n  // Use default logger if categoryName is not specified or invalid\n  if (typeof loggerCategoryName !== \"string\") {\n    loggerCategoryName = Logger.DEFAULT_CATEGORY;\n  }\n\n  if (!hasLogger(loggerCategoryName)) {\n\n    var level = undefined;\n\n    // If there's a \"levels\" entry in the configuration\n    if (levels.config) {\n      // Goes through the categories in the levels configuration entry, starting by the \"higher\" ones.\n      var keys = Object.keys(levels.config).sort();\n      for (var idx = 0; idx < keys.length; idx++) {\n        var levelCategory = keys[idx];\n        if (doesLevelEntryContainsLogger(levelCategory, loggerCategoryName)) {\n          // level for the logger\n          level = levels.config[levelCategory];\n        }\n      }\n    }\n  \n    // Create the logger for this name if it doesn't already exist\n    loggers[loggerCategoryName] = new Logger(loggerCategoryName, level);\n\n    var appenderList;\n    for(var appenderCategory in appenders) {\n      if (doesAppenderContainsLogger(appenderCategory, loggerCategoryName)) {\n        appenderList = appenders[appenderCategory];\n        appenderList.forEach(function(appender) {\n          loggers[loggerCategoryName].addListener(\"log\", appender);\n        });\n      }\n    }\n    if (appenders[ALL_CATEGORIES]) {\n      appenderList = appenders[ALL_CATEGORIES];\n      appenderList.forEach(function(appender) {\n        loggers[loggerCategoryName].addListener(\"log\", appender);\n      });\n    }\n  }\n  \n  return loggers[loggerCategoryName];\n}\n\n/**\n * args are appender, then zero or more categories\n */\nfunction addAppender () {\n  var args = Array.prototype.slice.call(arguments);\n  var appender = args.shift();\n  if (args.length === 0 || args[0] === undefined) {\n    args = [ ALL_CATEGORIES ];\n  }\n  //argument may already be an array\n  if (Array.isArray(args[0])) {\n    args = args[0];\n  }\n  \n  args.forEach(function(appenderCategory) {\n    addAppenderToCategory(appender, appenderCategory);\n    \n    if (appenderCategory === ALL_CATEGORIES) {\n      addAppenderToAllLoggers(appender);\n    } else {\n\n      for(var loggerCategory in loggers) {\n        if (doesAppenderContainsLogger(appenderCategory,loggerCategory)) {\n          loggers[loggerCategory].addListener(\"log\", appender);\n        }\n      }\n      \n    }\n  });\n}\n\nfunction addAppenderToAllLoggers(appender) {\n  for (var logger in loggers) {\n    if (hasLogger(logger)) {\n      loggers[logger].addListener(\"log\", appender);\n    }\n  }\n}\n\nfunction addAppenderToCategory(appender, category) {\n  if (!appenders[category]) {\n    appenders[category] = [];\n  }\n  appenders[category].push(appender);\n}\n\nfunction clearAppenders () {\n  appenders = {};\n  for (var logger in loggers) {\n    if (hasLogger(logger)) {\n      loggers[logger].removeAllListeners(\"log\");\n    }\n  }\n}\n\nfunction configureAppenders(appenderList, options) {\n  clearAppenders();\n  if (appenderList) {\n    appenderList.forEach(function(appenderConfig) {\n      loadAppender(appenderConfig.type);\n      var appender;\n      appenderConfig.makers = appenderMakers;\n      try {\n        appender = appenderMakers[appenderConfig.type](appenderConfig, options);\n        addAppender(appender, appenderConfig.category);\n      } catch(e) {\n        throw new Error(\"log4js configuration problem for \" + util.inspect(appenderConfig), e);\n      }\n    });\n  }\n}\n\nfunction configureLevels(_levels) {\n  levels.config = _levels; // Keep it so we can create loggers later using this cfg\n  if (_levels) {\n    var keys = Object.keys(levels.config).sort();\n    for (var idx in keys) {\n      var category = keys[idx];\n      if(category === ALL_CATEGORIES) {\n        setGlobalLogLevel(_levels[category]);\n      }        \n      for(var loggerCategory in loggers) {\n        if (doesLevelEntryContainsLogger(category, loggerCategory)) {\n          loggers[loggerCategory].setLevel(_levels[category]);\n        }\n      }\n    }\n  }\n}\n\nfunction setGlobalLogLevel(level) {\n  Logger.prototype.level = levels.toLevel(level, levels.TRACE);\n}\n\n/**\n * Get the default logger instance.\n * @return {Logger} instance of default logger\n * @static\n */\nfunction getDefaultLogger () {\n  return getLogger(Logger.DEFAULT_CATEGORY);\n}\n\nvar configState = {};\n\nfunction loadConfigurationFile(filename) {\n  if (filename) {\n    return JSON.parse(fs.readFileSync(filename, \"utf8\"));\n  }\n  return undefined;\n}\n\nfunction configureOnceOff(config, options) {\n  if (config) {\n    try {\n      configureLevels(config.levels);\n      configureAppenders(config.appenders, options);\n      \n      if (config.replaceConsole) {\n        replaceConsole();\n      } else {\n        restoreConsole();\n      }\n    } catch (e) {\n      throw new Error(\n        \"Problem reading log4js config \" + util.inspect(config) + \n          \". Error was \\\"\" + e.message + \"\\\" (\" + e.stack + \")\"\n      );\n    }\n  }\n}\n\nfunction reloadConfiguration(options) {\n  var mtime = getMTime(configState.filename);\n  if (!mtime) return;\n  \n  if (configState.lastMTime && (mtime.getTime() > configState.lastMTime.getTime())) {\n    configureOnceOff(loadConfigurationFile(configState.filename), options);\n  }\n  configState.lastMTime = mtime;\n}\n\nfunction getMTime(filename) {\n  var mtime;\n  try {\n    mtime = fs.statSync(configState.filename).mtime;\n  } catch (e) {\n    getLogger('log4js').warn('Failed to load configuration file ' + filename);\n  }\n  return mtime;\n}\n\nfunction initReloadConfiguration(filename, options) {\n  if (configState.timerId) {\n    clearInterval(configState.timerId);\n    delete configState.timerId;\n  }\n  configState.filename = filename;\n  configState.lastMTime = getMTime(filename);\n  configState.timerId = setInterval(reloadConfiguration, options.reloadSecs*1000, options);\n}\n\nfunction configure(configurationFileOrObject, options) {\n  var config = configurationFileOrObject;\n  config = config || process.env.LOG4JS_CONFIG;\n  options = options || {};\n  \n  if (config === undefined || config === null || typeof(config) === 'string') {\n    if (options.reloadSecs) {\n      initReloadConfiguration(config, options);\n    }\n    config = loadConfigurationFile(config) || defaultConfig;\n  } else {\n    if (options.reloadSecs) {\n      getLogger('log4js').warn(\n        'Ignoring configuration reload parameter for \"object\" configuration.'\n      );\n    }\n  }\n  configureOnceOff(config, options);\n}\n\nvar originalConsoleFunctions = {\n  log: console.log,\n  debug: console.debug,\n  info: console.info,\n  warn: console.warn,\n  error: console.error\n};\n\nfunction replaceConsole(logger) {\n  function replaceWith(fn) {\n    return function() {\n      fn.apply(logger, arguments);\n    };\n  }\n  logger = logger || getLogger(\"console\");\n  ['log','debug','info','warn','error'].forEach(function (item) {\n    console[item] = replaceWith(item === 'log' ? logger.info : logger[item]);\n  });\n}\n\nfunction restoreConsole() {\n  ['log', 'debug', 'info', 'warn', 'error'].forEach(function (item) {\n    console[item] = originalConsoleFunctions[item];\n  });\n}\n\n/**\n * Load an appenderModule based on the provided appender filepath. Will first\n * check if the appender path is a subpath of the log4js \"lib/appenders\" directory.\n * If not, it will attempt to load the the appender as complete path.\n *\n * @param {string} appender The filepath for the appender.\n * @returns {Object|null} The required appender or null if appender could not be loaded.\n * @private\n */\nfunction requireAppender(appender) {\n  var appenderModule;\n  try {\n    appenderModule = require('./appenders/' + appender);\n  } catch (e) {\n    appenderModule = require(appender);\n  }\n  return appenderModule;\n}\n\n/**\n * Load an appender. Provided the appender path to be loaded. If appenderModule is defined,\n * it will be used in place of requiring the appender module.\n *\n * @param {string} appender The path to the appender module.\n * @param {Object|void} [appenderModule] The pre-required appender module. When provided,\n * instead of requiring the appender by its path, this object will be used.\n * @returns {void}\n * @private\n */\nfunction loadAppender(appender, appenderModule) {\n  appenderModule = appenderModule || requireAppender(appender);\n\n  if (!appenderModule) {\n    throw new Error(\"Invalid log4js appender: \" + util.inspect(appender));\n  }\n\n  module.exports.appenders[appender] = appenderModule.appender.bind(appenderModule);\n  if (appenderModule.shutdown) {\n    appenderShutdowns[appender] = appenderModule.shutdown.bind(appenderModule);\n  }\n  appenderMakers[appender] = appenderModule.configure.bind(appenderModule);\n}\n\n/**\n * Shutdown all log appenders. This will first disable all writing to appenders\n * and then call the shutdown function each appender.\n *\n * @params {Function} cb - The callback to be invoked once all appenders have\n *  shutdown. If an error occurs, the callback will be given the error object\n *  as the first argument.\n * @returns {void}\n */\nfunction shutdown(cb) {\n  // First, disable all writing to appenders. This prevents appenders from\n  // not being able to be drained because of run-away log writes.\n  loggerModule.disableAllLogWrites();\n\n  // Call each of the shutdown functions in parallel\n  var completed = 0;\n  var error;\n  var shutdownFcts = [];\n  var complete = function(err) {\n    error = error || err;\n    completed++;\n    if (completed >= shutdownFcts.length) {\n      cb(error);\n    }\n  };\n  for (var category in appenderShutdowns) {\n    if (appenderShutdowns.hasOwnProperty(category)) {\n      shutdownFcts.push(appenderShutdowns[category]);\n    }\n  }\n  if (!shutdownFcts.length) {\n    return cb();\n  }\n  shutdownFcts.forEach(function(shutdownFct) { shutdownFct(complete); });\n}\n\nmodule.exports = {\n  getBufferedLogger: getBufferedLogger,\n  getLogger: getLogger,\n  getDefaultLogger: getDefaultLogger,\n  hasLogger: hasLogger,\n  \n  addAppender: addAppender,\n  loadAppender: loadAppender,\n  clearAppenders: clearAppenders,\n  configure: configure,\n  shutdown: shutdown,\n  \n  replaceConsole: replaceConsole,\n  restoreConsole: restoreConsole,\n  \n  levels: levels,\n  setGlobalLogLevel: setGlobalLogLevel,\n  \n  layouts: layouts,\n  appenders: {},\n  appenderMakers: appenderMakers,\n  connectLogger: require('./connect-logger').connectLogger\n};\n\n//set ourselves up\nconfigure();\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}