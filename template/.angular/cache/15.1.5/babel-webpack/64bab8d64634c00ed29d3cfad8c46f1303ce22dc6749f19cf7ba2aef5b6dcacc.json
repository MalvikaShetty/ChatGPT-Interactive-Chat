{"ast":null,"code":"'use strict';\n\nvar layouts = require('../layouts'),\n  loggly = require('loggly'),\n  os = require('os'),\n  passThrough = layouts.messagePassThroughLayout;\nfunction isAnyObject(value) {\n  return value != null && (typeof value === 'object' || typeof value === 'function');\n}\nfunction numKeys(o) {\n  var res = 0;\n  for (var k in o) {\n    if (o.hasOwnProperty(k)) res++;\n  }\n  return res;\n}\n\n/**\n * @param msg - array of args for logging.\n * @returns { deTaggedMsg: [], additionalTags: [] }\n */\nfunction processTags(msgListArgs) {\n  var msgList = msgListArgs.length === 1 ? [msgListArgs[0]] : Array.apply(null, msgListArgs);\n  return msgList.reduce(function (accum, element, currentIndex, array) {\n    if (isAnyObject(element) && Array.isArray(element.tags) && numKeys(element) == 1) {\n      accum.additionalTags = accum.additionalTags.concat(element.tags);\n    } else {\n      accum.deTaggedData.push(element);\n    }\n    return accum;\n  }, {\n    deTaggedData: [],\n    additionalTags: []\n  });\n}\n\n/**\n * Loggly Appender. Sends logging events to Loggly using node-loggly, optionally adding tags.\n *\n * This appender will scan the msg from the logging event, and pull out any argument of the\n * shape `{ tags: [] }` so that it's possibleto add tags in a normal logging call.\n *\n * For example:\n *\n * logger.info({ tags: ['my-tag-1', 'my-tag-2'] }, 'Some message', someObj, ...)\n *\n * And then this appender will remove the tags param and append it to the config.tags.\n *\n * @param config object with loggly configuration data\n * {\n *   token: 'your-really-long-input-token',\n *   subdomain: 'your-subdomain',\n *   tags: ['loggly-tag1', 'loggly-tag2', .., 'loggly-tagn'] \n * }\n * @param layout a function that takes a logevent and returns a string (defaults to objectLayout).\n */\nfunction logglyAppender(config, layout) {\n  var client = loggly.createClient(config);\n  if (!layout) layout = passThrough;\n  return function (loggingEvent) {\n    var result = processTags(loggingEvent.data);\n    var deTaggedData = result.deTaggedData;\n    var additionalTags = result.additionalTags;\n\n    // Replace the data property with the deTaggedData\n    loggingEvent.data = deTaggedData;\n    var msg = layout(loggingEvent);\n    client.log({\n      msg: msg,\n      level: loggingEvent.level.levelStr,\n      category: loggingEvent.categoryName,\n      hostname: os.hostname().toString()\n    }, additionalTags);\n  };\n}\nfunction configure(config) {\n  var layout;\n  if (config.layout) {\n    layout = layouts.layout(config.layout.type, config.layout);\n  }\n  return logglyAppender(config, layout);\n}\nexports.name = 'loggly';\nexports.appender = logglyAppender;\nexports.configure = configure;","map":{"version":3,"names":["layouts","require","loggly","os","passThrough","messagePassThroughLayout","isAnyObject","value","numKeys","o","res","k","hasOwnProperty","processTags","msgListArgs","msgList","length","Array","apply","reduce","accum","element","currentIndex","array","isArray","tags","additionalTags","concat","deTaggedData","push","logglyAppender","config","layout","client","createClient","loggingEvent","result","data","msg","log","level","levelStr","category","categoryName","hostname","toString","configure","type","exports","name","appender"],"sources":["C:/Users/malvi/Angular/template/node_modules/sql-to-json/node_modules/log4js/lib/appenders/loggly.js"],"sourcesContent":["'use strict';\nvar layouts = require('../layouts')\n, loggly = require('loggly')\n, os = require('os')\n, passThrough = layouts.messagePassThroughLayout;\n\n\nfunction isAnyObject(value) {\n\treturn value != null && (typeof value === 'object' || typeof value === 'function');\n}\n\nfunction numKeys(o) {\n  var res = 0;\n  for (var k in o) {\n    if (o.hasOwnProperty(k)) res++;\n  }\n  return res;\n}\n\n/**\n * @param msg - array of args for logging.\n * @returns { deTaggedMsg: [], additionalTags: [] }\n */\nfunction processTags(msgListArgs) {\n  var msgList = (msgListArgs.length === 1 ? [msgListArgs[0]] : Array.apply(null, msgListArgs));\n\n  return msgList.reduce(function (accum, element, currentIndex, array) {\n    if (isAnyObject(element) && Array.isArray(element.tags) && numKeys(element) == 1) {\n      accum.additionalTags = accum.additionalTags.concat(element.tags);\n    } else {\n      accum.deTaggedData.push(element);\n    }\n    return accum;\n  }, { deTaggedData: [], additionalTags: [] });\n}\n\n/**\n * Loggly Appender. Sends logging events to Loggly using node-loggly, optionally adding tags.\n *\n * This appender will scan the msg from the logging event, and pull out any argument of the\n * shape `{ tags: [] }` so that it's possibleto add tags in a normal logging call.\n *\n * For example:\n *\n * logger.info({ tags: ['my-tag-1', 'my-tag-2'] }, 'Some message', someObj, ...)\n *\n * And then this appender will remove the tags param and append it to the config.tags.\n *\n * @param config object with loggly configuration data\n * {\n *   token: 'your-really-long-input-token',\n *   subdomain: 'your-subdomain',\n *   tags: ['loggly-tag1', 'loggly-tag2', .., 'loggly-tagn'] \n * }\n * @param layout a function that takes a logevent and returns a string (defaults to objectLayout).\n */\nfunction logglyAppender(config, layout) {\n\tvar client = loggly.createClient(config);\n  if(!layout) layout = passThrough;\n\n  return function(loggingEvent) {\n    var result = processTags(loggingEvent.data);\n    var deTaggedData = result.deTaggedData;\n    var additionalTags = result.additionalTags;\n\n    // Replace the data property with the deTaggedData\n    loggingEvent.data = deTaggedData;\n\n    var msg = layout(loggingEvent);\n\n\t\tclient.log({\n\t\t\tmsg: msg,\n\t\t\tlevel: loggingEvent.level.levelStr,\n\t\t\tcategory: loggingEvent.categoryName,\n\t\t\thostname: os.hostname().toString(),\n\t\t}, additionalTags);\n  }\n}\n\nfunction configure(config) {\n\tvar layout;\n\tif (config.layout) {\n\t\tlayout = layouts.layout(config.layout.type, config.layout);\n\t}\n\treturn logglyAppender(config, layout);\n}\n\nexports.name      = 'loggly';\nexports.appender  = logglyAppender;\nexports.configure = configure;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}