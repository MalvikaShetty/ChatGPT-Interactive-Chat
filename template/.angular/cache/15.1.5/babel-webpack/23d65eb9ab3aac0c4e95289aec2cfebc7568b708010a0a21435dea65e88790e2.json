{"ast":null,"code":"\"use strict\";\n\nvar wrapper = require(\"../module-wrapper.js\");\nvar _require = require(\"../doc-utils.js\"),\n  isTextStart = _require.isTextStart,\n  isTextEnd = _require.isTextEnd,\n  endsWith = _require.endsWith,\n  startsWith = _require.startsWith;\nvar wTpreserve = '<w:t xml:space=\"preserve\">';\nvar wTpreservelen = wTpreserve.length;\nvar wtEnd = \"</w:t>\";\nvar wtEndlen = wtEnd.length;\nfunction isWtStart(part) {\n  return isTextStart(part) && part.tag === \"w:t\";\n}\nfunction addXMLPreserve(chunk, index) {\n  var tag = chunk[index].value;\n  if (chunk[index + 1].value === \"</w:t>\") {\n    return tag;\n  }\n  if (tag.indexOf('xml:space=\"preserve\"') !== -1) {\n    return tag;\n  }\n  return tag.substr(0, tag.length - 1) + ' xml:space=\"preserve\">';\n}\nfunction isInsideLoop(meta, chunk) {\n  return meta && meta.basePart && chunk.length > 1;\n}\nvar spacePreserve = {\n  name: \"SpacePreserveModule\",\n  postparse: function postparse(postparsed, meta) {\n    var chunk = [],\n      inTextTag = false,\n      endLindex = 0,\n      lastTextTag = 0;\n    function isStartingPlaceHolder(part, chunk) {\n      return part.type === \"placeholder\" && chunk.length > 1;\n    }\n    var result = postparsed.reduce(function (postparsed, part) {\n      if (isWtStart(part)) {\n        inTextTag = true;\n        lastTextTag = chunk.length;\n      }\n      if (!inTextTag) {\n        postparsed.push(part);\n        return postparsed;\n      }\n      chunk.push(part);\n      if (isInsideLoop(meta, chunk)) {\n        endLindex = meta.basePart.endLindex;\n        chunk[0].value = addXMLPreserve(chunk, 0);\n      }\n      if (isStartingPlaceHolder(part, chunk)) {\n        chunk[lastTextTag].value = addXMLPreserve(chunk, lastTextTag);\n        endLindex = part.endLindex;\n      }\n      if (isTextEnd(part) && part.lIndex > endLindex) {\n        if (endLindex !== 0) {\n          chunk[lastTextTag].value = addXMLPreserve(chunk, lastTextTag);\n        }\n        Array.prototype.push.apply(postparsed, chunk);\n        chunk = [];\n        inTextTag = false;\n        endLindex = 0;\n        lastTextTag = 0;\n      }\n      return postparsed;\n    }, []);\n    Array.prototype.push.apply(result, chunk);\n    return result;\n  },\n  postrender: function postrender(parts) {\n    var lastNonEmpty = \"\";\n    var lastNonEmptyIndex = 0;\n    for (var i = 0, len = parts.length; i < len; i++) {\n      var index = i;\n      var p = parts[i];\n      if (p === \"\") {\n        continue;\n      }\n      if (endsWith(lastNonEmpty, wTpreserve) && startsWith(p, wtEnd)) {\n        parts[lastNonEmptyIndex] = lastNonEmpty.substr(0, lastNonEmpty.length - wTpreservelen) + \"<w:t/>\";\n        p = p.substr(wtEndlen);\n      }\n      lastNonEmpty = p;\n      lastNonEmptyIndex = index;\n      parts[i] = p;\n    }\n    return parts;\n  }\n};\nmodule.exports = function () {\n  return wrapper(spacePreserve);\n};","map":{"version":3,"names":["wrapper","require","_require","isTextStart","isTextEnd","endsWith","startsWith","wTpreserve","wTpreservelen","length","wtEnd","wtEndlen","isWtStart","part","tag","addXMLPreserve","chunk","index","value","indexOf","substr","isInsideLoop","meta","basePart","spacePreserve","name","postparse","postparsed","inTextTag","endLindex","lastTextTag","isStartingPlaceHolder","type","result","reduce","push","lIndex","Array","prototype","apply","postrender","parts","lastNonEmpty","lastNonEmptyIndex","i","len","p","module","exports"],"sources":["C:/Users/malvi/Angular/template/node_modules/docxtemplater/js/modules/space-preserve.js"],"sourcesContent":["\"use strict\";\n\nvar wrapper = require(\"../module-wrapper.js\");\nvar _require = require(\"../doc-utils.js\"),\n  isTextStart = _require.isTextStart,\n  isTextEnd = _require.isTextEnd,\n  endsWith = _require.endsWith,\n  startsWith = _require.startsWith;\nvar wTpreserve = '<w:t xml:space=\"preserve\">';\nvar wTpreservelen = wTpreserve.length;\nvar wtEnd = \"</w:t>\";\nvar wtEndlen = wtEnd.length;\nfunction isWtStart(part) {\n  return isTextStart(part) && part.tag === \"w:t\";\n}\nfunction addXMLPreserve(chunk, index) {\n  var tag = chunk[index].value;\n  if (chunk[index + 1].value === \"</w:t>\") {\n    return tag;\n  }\n  if (tag.indexOf('xml:space=\"preserve\"') !== -1) {\n    return tag;\n  }\n  return tag.substr(0, tag.length - 1) + ' xml:space=\"preserve\">';\n}\nfunction isInsideLoop(meta, chunk) {\n  return meta && meta.basePart && chunk.length > 1;\n}\nvar spacePreserve = {\n  name: \"SpacePreserveModule\",\n  postparse: function postparse(postparsed, meta) {\n    var chunk = [],\n      inTextTag = false,\n      endLindex = 0,\n      lastTextTag = 0;\n    function isStartingPlaceHolder(part, chunk) {\n      return part.type === \"placeholder\" && chunk.length > 1;\n    }\n    var result = postparsed.reduce(function (postparsed, part) {\n      if (isWtStart(part)) {\n        inTextTag = true;\n        lastTextTag = chunk.length;\n      }\n      if (!inTextTag) {\n        postparsed.push(part);\n        return postparsed;\n      }\n      chunk.push(part);\n      if (isInsideLoop(meta, chunk)) {\n        endLindex = meta.basePart.endLindex;\n        chunk[0].value = addXMLPreserve(chunk, 0);\n      }\n      if (isStartingPlaceHolder(part, chunk)) {\n        chunk[lastTextTag].value = addXMLPreserve(chunk, lastTextTag);\n        endLindex = part.endLindex;\n      }\n      if (isTextEnd(part) && part.lIndex > endLindex) {\n        if (endLindex !== 0) {\n          chunk[lastTextTag].value = addXMLPreserve(chunk, lastTextTag);\n        }\n        Array.prototype.push.apply(postparsed, chunk);\n        chunk = [];\n        inTextTag = false;\n        endLindex = 0;\n        lastTextTag = 0;\n      }\n      return postparsed;\n    }, []);\n    Array.prototype.push.apply(result, chunk);\n    return result;\n  },\n  postrender: function postrender(parts) {\n    var lastNonEmpty = \"\";\n    var lastNonEmptyIndex = 0;\n    for (var i = 0, len = parts.length; i < len; i++) {\n      var index = i;\n      var p = parts[i];\n      if (p === \"\") {\n        continue;\n      }\n      if (endsWith(lastNonEmpty, wTpreserve) && startsWith(p, wtEnd)) {\n        parts[lastNonEmptyIndex] = lastNonEmpty.substr(0, lastNonEmpty.length - wTpreservelen) + \"<w:t/>\";\n        p = p.substr(wtEndlen);\n      }\n      lastNonEmpty = p;\n      lastNonEmptyIndex = index;\n      parts[i] = p;\n    }\n    return parts;\n  }\n};\nmodule.exports = function () {\n  return wrapper(spacePreserve);\n};"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}