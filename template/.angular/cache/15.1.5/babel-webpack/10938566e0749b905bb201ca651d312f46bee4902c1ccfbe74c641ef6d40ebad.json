{"ast":null,"code":"import { __decorate, __metadata } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { ChatService } from '../../../../shared/services/chat.service';\nimport { FileManagerComponent } from '../../file-manager/file-manager.component';\n//import { Input } from 'hammerjs';\nlet ChatComponent = class ChatComponent {\n  constructor(chatService) {\n    this.chatService = chatService;\n    this.openTab = \"call\";\n    this.users = [];\n    this.searchUsers = [];\n    this.error = false;\n    this.notFound = false;\n    this.showEmojiPicker = false;\n    this.mobileToggle = false;\n    this.chathis = this.chatService.getChats(\"1\");\n    console.log(this.chathis + \"hey there\");\n    this.chatService.getUsers().subscribe(users => {\n      this.searchUsers = users;\n      this.users = users;\n    });\n  }\n  ngOnInit() {\n    this.userChat(this.id);\n    this.getProfile();\n  }\n  toggleEmojiPicker() {\n    this.showEmojiPicker = !this.showEmojiPicker;\n  }\n  addEmoji(event) {\n    const text = `${event.emoji.native}`;\n    this.chatText = text;\n    this.showEmojiPicker = false;\n  }\n  tabbed(val) {\n    this.openTab = val;\n  }\n  // Get user Profile\n  getProfile() {\n    this.chatService.getCurrentUser().subscribe(userProfile => this.profile = userProfile);\n  }\n  // User Chat\n  userChat(id = 1) {\n    this.chatService.chatToUser(id).subscribe(chatUser => this.chatUser = chatUser);\n    this.chathis = this.chatService.getChats(id);\n  }\n  // Send Message to User\n  sendMessage(form) {\n    if (!form.value.message) {\n      this.error = true;\n      return false;\n    }\n    this.error = false;\n    let chat = {\n      sender: this.profile.id,\n      receiver: this.chatUser.id,\n      receiver_name: this.chatUser.name,\n      jsonFileData: FileManagerComponent.convertedToJsonString,\n      message: form.value.message\n    };\n    this.chatService.sendMessage(chat);\n    this.chatText = '';\n    this.chatUser.seen = 'online';\n    this.chatUser.online = true;\n  }\n  searchTerm(term) {\n    if (!term) return this.searchUsers = this.users;\n    term = term.toLowerCase();\n    let user = [];\n    this.users.filter(users => {\n      if (users.name.toLowerCase().includes(term)) {\n        user.push(users);\n      }\n    });\n    this.searchUsers = user;\n  }\n  mobileMenu() {\n    this.mobileToggle = !this.mobileToggle;\n  }\n};\nChatComponent = __decorate([Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.scss']\n}), __metadata(\"design:paramtypes\", [ChatService])], ChatComponent);\nexport { ChatComponent };","map":{"version":3,"mappings":"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","names":["Component","ChatService","FileManagerComponent","ChatComponent","constructor","chatService","chathis","getChats","console","log","getUsers","subscribe","users","searchUsers","ngOnInit","userChat","id","getProfile","toggleEmojiPicker","showEmojiPicker","addEmoji","event","text","emoji","native","chatText","tabbed","val","openTab","getCurrentUser","userProfile","profile","chatToUser","chatUser","sendMessage","form","value","message","error","chat","sender","receiver","receiver_name","name","jsonFileData","convertedToJsonString","seen","online","searchTerm","term","toLowerCase","user","filter","includes","push","mobileMenu","mobileToggle","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\malvi\\Angular\\template\\src\\app\\components\\apps\\chat\\chat\\chat.component.ts"],"sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\nimport { ChatMessages, ChatUsers } from '../../../../shared/model/chat.model';\nimport { ChatService } from '../../../../shared/services/chat.service';\nimport * as XLSX from 'xlsx';\nimport { FileManagerComponent } from '../../file-manager/file-manager.component';\nimport { Console } from 'console';\n//import { Input } from 'hammerjs';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.scss']\n})\nexport class ChatComponent implements OnInit {\n  \n  public openTab : string = \"call\";\n  public users : ChatUsers[] = []\n  public searchUsers : ChatUsers[] = []\n  public chatUser : any;\n  public profile : any;\n  public chats : any;\n  public chatText : string;\n  public error : boolean = false;\n  public notFound: boolean = false;\n  public id : any;\n  public searchText : string;\n  public showEmojiPicker:boolean = false;\n  public emojies: any;\n  public mobileToggle: boolean = false;\n  fileManComponent: FileManagerComponent;\n  public chathis: any;\n \n\n  constructor(private chatService: ChatService) {   \n    this.chathis = this.chatService.getChats(\"1\");\n    console.log( this.chathis + \"hey there\");\n    this.chatService.getUsers().subscribe(users => { \n      this.searchUsers = users\n      this.users = users\n    })\n  }\n\n  ngOnInit() {  \n    this.userChat(this.id)\n    this.getProfile()\n  }\n\n  public toggleEmojiPicker(){\n    this.showEmojiPicker=!this.showEmojiPicker;\n  }\n\n  addEmoji(event){\n    const text = `${event.emoji.native}`;\n    this.chatText = text;\n    this.showEmojiPicker = false;\n  }\n\n  public tabbed(val) {\n  \tthis.openTab = val\n  }\n\n  // Get user Profile\n  public getProfile() {\n    this.chatService.getCurrentUser().subscribe(userProfile => this.profile = userProfile)\n  }\n\n  // User Chat\n  public userChat(id:number =1){    \n    this.chatService.chatToUser(id).subscribe(chatUser => this.chatUser = chatUser)\n    this.chathis = this.chatService.getChats(id);\n  }\n \n  // Send Message to User\n  public sendMessage(form) {\n    \n    if(!form.value.message){\n      this.error = true\n      return false\n    }\n    this.error = false\n    let chat = {\n      sender: this.profile.id,\n      receiver: this.chatUser.id,\n      receiver_name: this.chatUser.name,\n      jsonFileData: FileManagerComponent.convertedToJsonString,\n      message: form.value.message\n    }\n    this.chatService.sendMessage(chat) \n    this.chatText = ''\n    this.chatUser.seen = 'online'\n    this.chatUser.online = true\n  }\n\n  searchTerm(term: any) {\n    if(!term) return this.searchUsers = this.users\n    term = term.toLowerCase();\n    let user = []\n    this.users.filter(users => {\n      if(users.name.toLowerCase().includes(term)) {\n        user.push(users)\n      } \n    })\n    this.searchUsers = user\n  }\n\n  mobileMenu() {\n    this.mobileToggle = !this.mobileToggle;\n  }\n    \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}